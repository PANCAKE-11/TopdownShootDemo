//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Components.Stat;

public partial class GameEntity {

    public StatsComp statsComp { get { return (StatsComp)GetComponent(GameComponentsLookup.StatsComp); } }
    public bool hasStatsComp { get { return HasComponent(GameComponentsLookup.StatsComp); } }

    public void AddStatsComp(float[] newVars) {
        var index = GameComponentsLookup.StatsComp;
        var component = (StatsComp)CreateComponent(index, typeof(StatsComp));
        component.Vars = newVars;
        AddComponent(index, component);
    }

    public void ReplaceStatsComp(float[] newVars) {
        var index = GameComponentsLookup.StatsComp;
        var component = (StatsComp)CreateComponent(index, typeof(StatsComp));
        component.Vars = newVars;
        ReplaceComponent(index, component);
    }

    public void RemoveStatsComp() {
        RemoveComponent(GameComponentsLookup.StatsComp);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherStatsComp;

    public static Entitas.IMatcher<GameEntity> StatsComp {
        get {
            if (_matcherStatsComp == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.StatsComp);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherStatsComp = matcher;
            }

            return _matcherStatsComp;
        }
    }
}
